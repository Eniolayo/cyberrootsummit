import ctl from "@netlify/classnames-template-literals";
import axios from "axios";
import Head from "next/head";
import Link from "next/link";
import React from "react";

import Footer from "@/components/footer";
import Header from "@/components/header";
import { IntroContent } from "@/components/Home";
import { Heading } from "@/components/ui";
import UseShowTopBtn from "@/utils/useShowTopBtn";
const contentful = require("contentful");

const client = contentful.createClient({
  space: process.env.NEXT_PUBLIC_SPACE,
  environment: process.env.NEXT_PUBLIC_ENVIRONMENT,
  accessToken: process.env.NEXT_PUBLIC_ACCESSTOKEN,
});

export default function Home({ posts }) {
  const [showTopBtn, setShowTopBtn] = UseShowTopBtn();
  console.log(posts, "postss");
  // React.useEffect(() => {
  //   const contentType = "summit";
  //   const filterParameters = "fields.eventName=testing";
  //   // const filterParameters = "fields.eventName=2022Hackaton";
  //   async function hill(params) {
  //     const data = await fetchContentfulData(contentType, filterParameters);
  //     console.log(data);
  //   }
  //   hill();
  // }, []);

  return (
    <>
      <Head>
        <title>Cyberroot</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <Header />
        <IntroContent />
        <section className="py-10 w-[92%] max-w-[1500px] mx-auto space-y-6">
          <h3 className="capitalize text-3xl font-bold">upcoming events</h3>
          {ExampleEvents()}
          <h3 className="capitalize text-3xl font-bold">past events</h3>
          {ExampleEvents()}
        </section>
        <Footer />
      </main>
    </>
  );
}
function ExampleEvents() {
  return (
    <>
      <div className={gridEventWrapper}>
        {[
          "bg-summit-bg",
          "bg-demo-summit-bg1",
          "bg-demo-summit-bg2",
          "bg-demo-summit-bg3",
        ].map((item) => (
          <Link
            href="/events/7814403220567356"
            className={`${item} rounded-md block overflow-hidden text-white bg-no-repeat bg-cover text-left py-10 px-5`}
            key={item}
          >
            <h5 className="uppercase font-bold text-2xl">cybersummit 2023</h5>
            <h6 className="text-lg">10-09-2023</h6>
            <p className="text-sm max-w-[280px] py-7">
              Small businesses are often targets for cyber-attacks because they
              are perceived as easy targets. A cybersecurity event designed for
              small business owners and employees can cover topics like risk
              management,
            </p>
            {/* <button className="border border-white text-base rounded-lg px-2 py-1">
              Register for free
            </button> */}
          </Link>
        ))}
      </div>
    </>
  );
}

const fetchContentfulData = async (contentType, filterParameters) => {
  const spaceId = process.env.NEXT_PUBLIC_SPACE;
  const environmentId = process.env.NEXT_PUBLIC_ENVIRONMENT;
  const accessToken = process.env.NEXT_PUBLIC_ACCESSTOKEN;

  const url = `https://cdn.contentful.com/spaces/${spaceId}/environments/${environmentId}/entries?content_type=${contentType}&${filterParameters}`;

  try {
    const response = await axios.get(url, {
      headers: {
        Authorization: `Bearer ${accessToken}`,
      },
    });

    return response.data;
  } catch (error) {
    console.error("Error fetching Contentful data:", error);
    return null;
  }
};
export async function getStaticProps() {
  const res = await client.getEntries({
    content_type: "summit",
  });
  const posts = await res.items;
  return {
    props: { posts },
  };
}
const gridEventWrapper = ctl(`
  grid 
  gap-5 
  lg:gap-10 
  grid-cols-7 
  
  [&>*:nth-child(4n+1)]:col-span-full 
  [&>*:nth-child(4n+4)]:col-span-full 

  md:[&>*:nth-child(4n+1)]:col-span-3 
  md:[&>*:nth-child(4n+4)]:col-span-3 
  
  [&>*:nth-child(4n+2)]:col-span-full 
  [&>*:nth-child(4n+3)]:col-span-full
  
  md:[&>*:nth-child(4n+2)]:col-span-4 
  md:[&>*:nth-child(4n+3)]:col-span-4
`);
